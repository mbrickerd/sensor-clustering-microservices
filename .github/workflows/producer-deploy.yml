name: Producer Service CD

on:
  push:
    branches: [ main ]
    paths:
      - 'producer/**'
      - 'domain/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ACR_NAME: acrsensorclusteringtst
  AKS_CLUSTER_NAME: aks-sensor-clustering-tst
  AKS_RESOURCE_GROUP: rg-sensor-clustering-tst

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Login to Azure
    - name: Azure login
      uses: azure/login@v1
      with:
        client-id: ${{ vars.ARM_CLIENT_ID }}
        tenant-id: ${{ vars.ARM_TENANT_ID }}
        subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

    # Configure Docker to use the Azure CLI credentials
    - name: Docker login to ACR
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    # Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: producer/Dockerfile
        push: true
        tags: |
          ${{ env.ACR_NAME }}.azurecr.io/sensor-producer:${{ github.sha }}
          ${{ env.ACR_NAME }}.azurecr.io/sensor-producer:latest
      
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
    
    - name: Deploy to AKS
      run: |
        # Create a deployment file with the image reference updated
        cat <<EOF > producer-deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: sensor-producer
          labels:
            app: sensor-producer
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: sensor-producer
          template:
            metadata:
              labels:
                app: sensor-producer
            spec:
              containers:
              - name: sensor-producer
                image: ${{ env.ACR_NAME }}.azurecr.io/sensor-producer:${{ github.sha }}
                ports:
                - containerPort: 8080
                - containerPort: 8000
                env:
                - name: KEY_VAULT_URL
                  value: "${{ vars.KEY_VAULT_URL }}"
                - name: EVENTHUB_NAME
                  value: "sensors"
                - name: EVENTHUB_NAMESPACE
                  value: "${{ vars.EVENTHUB_NAMESPACE }}"
                - name: NUM_SENSORS
                  value: "20"
                - name: SIMULATION_INTERVAL_MS
                  value: "1000"
                - name: SENSOR_DATA_FILE
                  value: "data_sensors.csv"
                - name: STORAGE_CONTAINER
                  value: "data"
              nodeSelector:
                kubernetes.io/os: linux
        EOF
        
        # Apply the deployment
        kubectl apply -f producer-deployment.yaml
        
        # Wait for the deployment to complete
        kubectl rollout status deployment/sensor-producer